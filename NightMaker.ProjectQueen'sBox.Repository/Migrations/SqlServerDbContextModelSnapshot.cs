// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NightMaker.ProjectQueen_sBox.Repository.DbContexts;

#nullable disable

namespace NightMaker.ProjectQueen_sBox.Repository.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Beehive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BeehiveDetailId")
                        .HasColumnType("int");

                    b.Property<int>("BeehiveMaintenanceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("BeehiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BeehiveNoteId")
                        .HasColumnType("int");

                    b.Property<int>("ColonyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeehiveDetailId");

                    b.HasIndex("BeehiveMaintenanceStatusId");

                    b.HasIndex("BeehiveNoteId");

                    b.HasIndex("ColonyId");

                    b.ToTable("Beehives");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ConstructionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modernity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BeehiveDetails");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveMaintenanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsCriticalAlert")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintenanceNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BeehiveMaintenanceStatuses");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BeehiveNotes");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColonyDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ColonyMaintenanceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ColonyNoteId")
                        .HasColumnType("int");

                    b.Property<int>("ColonyStockId")
                        .HasColumnType("int");

                    b.Property<int>("QueenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColonyDetailId");

                    b.HasIndex("ColonyMaintenanceStatusId");

                    b.HasIndex("ColonyNoteId");

                    b.HasIndex("ColonyStockId");

                    b.HasIndex("QueenId")
                        .IsUnique();

                    b.ToTable("Colonies");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApproximateBeeCount")
                        .HasColumnType("int");

                    b.Property<int>("MountUntilLastBreed")
                        .HasColumnType("int");

                    b.Property<int>("MountUntilLastHarvest")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ColonyDetails");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyMaintenanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsCriticalAlert")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastBreedAttempt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastMedicalIntervention")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintenanceNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColonyMaintenanceStatuses");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ColonyNotes");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BeePoisonKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeeWaxKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExtraNutritionKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HoneyKG")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ColonyStocks");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Harvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BeePoisonKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeeWaxKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ColonyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HoneyKG")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ColonyId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.ProducerStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("ApproximateBeePoisonHarvestKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ApproximateBeeWaxHarvestKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ApproximateHoneyHarvestKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeePoisonKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeeWaxKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ColonyCount")
                        .HasColumnType("int");

                    b.Property<int>("FreeBeeBoxCount")
                        .HasColumnType("int");

                    b.Property<decimal>("HoneyKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalLayerCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProducerStocks");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Queen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Queens");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Beehive", b =>
                {
                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveDetail", "BeehiveDetail")
                        .WithMany()
                        .HasForeignKey("BeehiveDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveMaintenanceStatus", "BeehiveMaintenanceStatus")
                        .WithMany()
                        .HasForeignKey("BeehiveMaintenanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.BeehiveNote", "BeehiveNote")
                        .WithMany()
                        .HasForeignKey("BeehiveNoteId");

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", "Colony")
                        .WithMany()
                        .HasForeignKey("ColonyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeehiveDetail");

                    b.Navigation("BeehiveMaintenanceStatus");

                    b.Navigation("BeehiveNote");

                    b.Navigation("Colony");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", b =>
                {
                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyDetail", "ColonyDetail")
                        .WithMany()
                        .HasForeignKey("ColonyDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyMaintenanceStatus", "ColonyMaintenanceStatus")
                        .WithMany()
                        .HasForeignKey("ColonyMaintenanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyNote", "ColonyNote")
                        .WithMany()
                        .HasForeignKey("ColonyNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.ColonyStock", "ColonyStock")
                        .WithMany()
                        .HasForeignKey("ColonyStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.Queen", "Queen")
                        .WithOne("Colony")
                        .HasForeignKey("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", "QueenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColonyDetail");

                    b.Navigation("ColonyMaintenanceStatus");

                    b.Navigation("ColonyNote");

                    b.Navigation("ColonyStock");

                    b.Navigation("Queen");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Harvest", b =>
                {
                    b.HasOne("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", "Colony")
                        .WithMany("Harvests")
                        .HasForeignKey("ColonyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colony");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Colony", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("NightMaker.ProjectQueen_sBox.Core.Entities.Queen", b =>
                {
                    b.Navigation("Colony")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
